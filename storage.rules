rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/vles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for all files within a specific task folder
    match /tasks/{taskId}/{allPaths=**} {

      // Allow file creation (upload) if the user is authenticated and they are the creator specified in the file's metadata.
      // This is the secure way to handle uploads for documents that don't have a Firestore record yet.
      allow create: if request.auth != null && request.resource.metadata.creatorId == request.auth.uid;

      // Allow reading, updating, or deleting files if the user is an admin, the task creator, or the assigned VLE.
      // It's critical to check that the task document exists before trying to read data from it.
      allow read, update, delete: if request.auth != null &&
                                     exists(/databases/$(database)/documents/tasks/$(taskId)) &&
                                     (isAdmin() ||
                                      get(/databases/$(database)/documents/tasks/$(taskId)).data.creatorId == request.auth.uid ||
                                      (get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedVleId != null &&
                                       get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedVleId == request.auth.uid)
                                     );
    }
  }
}
