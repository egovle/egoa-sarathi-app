
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the user document exists in 'vles' and has the isAdmin flag set to true.
      return isAuth() && get(/databases/(default)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isCreator(taskId) {
      return isOwner(get(/databases/(default)/documents/tasks/$(taskId)).data.creatorId);
    }
    
    function isAssignedVle(taskId) {
      let taskData = get(/databases/(default)/documents/tasks/$(taskId)).data;
      // Check if assignedVleId exists and if the user is the owner of it.
      return 'assignedVleId' in taskData && taskData.assignedVleId != null && isOwner(taskData.assignedVleId);
    }

    // --- Storage Rules ---

    // The 'tasks' folder contains all user-uploaded documents, organized by taskId.
    match /tasks/{taskId}/{allPaths=**} {
      // Only allow access if the user is authenticated.
      // Then, grant access if the user is an admin, the creator of the task, or the VLE assigned to the task.
      allow read, write: if isAuth() && (isAdmin() || isCreator(taskId) || isAssignedVle(taskId));
    }
  }
}
