rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function to check if a user is authenticated
    function isAuth() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is an admin by reading their Firestore document
    function isAdmin() {
      return isAuth() && get(/databases/(default)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }

    // Main rule for all files within the /tasks/ path
    match /tasks/{taskId}/{allPaths=**} {
    
      // Helper function to get the task document from Firestore
      function getTask() {
        return get(/databases/(default)/documents/tasks/$(taskId)).data;
      }
      
      // Helper function to check if the user created the task
      function isCreator() {
        return request.auth.uid == getTask().creatorId;
      }
      
      // Helper function to check if the user is the VLE assigned to the task
      function isAssignedVle() {
        // Ensure assignedVleId exists before trying to access it
        return "assignedVleId" in getTask() && request.auth.uid == getTask().assignedVleId;
      }

      // Allow read/write access only if the user is authenticated AND
      // they are an admin, the creator of the task, or the assigned VLE.
      allow read, write: if isAuth() && (isAdmin() || isCreator() || isAssignedVle());
    }
  }
}
