rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user is an admin by looking at their Firestore document
      return request.auth != null && exists(/databases/$(database)/documents/vles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }

    // Profile Pictures: Users can read anyone's photo, but only write their own.
    match /profile-pictures/{userId}/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    // Task Documents: Only the creator, assigned VLE, or an admin can access.
    // The uploaderId is stored in the file metadata.
    match /tasks/{taskId}/{fileName} {
        allow read: if request.auth != null; // Simplification: allow any signed-in user to read, access is controlled by Firestore doc URL
        allow write: if request.auth != null;
    }

    // Task Complaint Documents
    match /tasks/{taskId}/complaints/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Task Complaint Response Documents (Admin uploads)
    match /tasks/{taskId}/complaint_responses/{fileName} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Final Certificate (VLE uploads)
     match /tasks/{taskId}/certificate/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // Training Materials (Admins can write, VLEs can read)
    match /training_materials/{fileName} {
        allow read: if request.auth != null; // Let client decide visibility based on role
        allow write: if isAdmin();
    }
    
    // Group Chat Files
    match /group_chat_files/{fileName} {
        allow read, write: if request.auth != null; // Allow any authenticated user in the group chat
    }
  }
}
