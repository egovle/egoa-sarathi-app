
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/vles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }

    function isAssignedVle(taskData) {
      return taskData.assignedVleId != null && request.auth.uid == taskData.assignedVleId;
    }

    // --- Collection Rules ---

    // User (customer) profiles
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId); // Any user can create their own profile document on signup
    }

    // VLE profiles
    match /vles/{vleId} {
      allow read, update: if isOwner(vleId) || isAdmin();
      allow create: if isOwner(vleId); // Any VLE can create their own profile document on signup
    }

    // Task documents
    match /tasks/{taskId} {
      // Any authenticated user can create a task.
      // The app handles wallet transactions and initial data validation.
      allow create: if request.auth != null;

      // Read and Update permissions are for the task creator, the assigned VLE, or any admin.
      allow read, update: if request.auth != null && (
        isOwner(resource.data.creatorId) ||
        isAssignedVle(resource.data) ||
        isAdmin()
      );

      // No one can delete tasks from the app to preserve history.
      allow delete: if false;
    }
    
    // Service definitions
    match /services/{serviceId} {
      allow read: if true; // All users can read the services list to create tasks
      allow write: if isAdmin(); // Only admins can add, edit, or remove services
    }
    
    // Camp information
    match /camps/{campId} {
      allow read: if request.auth != null; // Any authenticated user can see camp details
      allow write: if isAdmin(); // Only admins can manage camps
    }
    
    // Suggestions for new camps
    match /campSuggestions/{suggestionId} {
      allow create: if request.auth != null; // Any authenticated user can suggest a camp
      allow read, delete: if isAdmin(); // Only admins can review and manage suggestions
    }
    
    // User-specific notifications
    match /notifications/{notificationId} {
      // Create is handled by server-side logic (Cloud Functions or app server).
      // The rule below ensures that only the intended recipient can manage their notification.
      allow read, write: if isOwner(resource.data.userId);
      allow create: if request.auth != null; // Trusting server-side logic to target correct user
    }
    
    // Requests from users to add balance to their wallet
    match /paymentRequests/{reqId} {
      allow create: if isOwner(request.resource.data.userId); // A user can only create a request for themselves
      allow read, update: if isAdmin(); // Only admins can view and approve requests
    }
  }
}
