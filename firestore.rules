rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdmin() {
      return exists(/databases/$(database)/documents/vles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }

    function isVle(userId) {
      return exists(/databases/$(database)/documents/vles/$(userId));
    }
    
    function isGovernment(userId) {
      return exists(/databases/$(database)/documents/government/$(userId));
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAssignedVle(task) {
      return task.data.assignedVleId == request.auth.uid;
    }
    
    function isTaskCreator(task) {
      return task.data.creatorId == request.auth.uid;
    }
    
    function isCampParticipant(camp) {
       return request.auth.uid in camp.data.assignedVles.map(v => v.vleId);
    }

    // --- Public Collections ---
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /camps/{campId} {
        allow read: if request.auth != null; // All users can see camp details
        allow create, update, delete: if isAdmin();
    }
    
    match /campSuggestions/{suggestionId} {
      allow create: if request.auth != null;
      allow read, delete: if isAdmin();
    }
    
    match /trainingMaterials/{materialId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- User Data Collections ---
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if request.auth.uid == userId;
      allow list: if isAdmin();
    }

    match /vles/{vleId} {
      allow read: if request.auth != null;
      allow update: if isOwner(vleId) || isAdmin();
      allow create: if request.auth.uid == vleId;
      allow list: if isAdmin();
    }
    
    match /government/{govId} {
      allow read, update: if isOwner(govId) || isAdmin();
      allow create: if request.auth.uid == govId;
      allow list: if isAdmin();
    }
    
    // --- Operational Collections ---
    match /tasks/{taskId} {
      allow read: if isAdmin() || isOwner(resource.data.creatorId) || isAssignedVle(resource);
      allow create: if isOwner(request.resource.data.creatorId);
      allow update: if isAdmin() || isOwner(resource.data.creatorId) || isAssignedVle(resource);
      allow delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if request.auth != null;
    }
    
    match /paymentRequests/{reqId} {
      allow create: if isOwner(request.resource.data.userId);
      allow list, read, update: if isAdmin();
    }

    // --- Chat Collections ---
    match /taskChats/{taskId}/messages/{messageId} {
        allow read, write: if isAdmin()
                           || isTaskCreator(get(/databases/$(database)/documents/tasks/$(taskId)))
                           || isAssignedVle(get(/databases/$(database)/documents/tasks/$(taskId)));
    }
    
    match /campChats/{campId}/messages/{messageId} {
        allow read, write: if isAdmin()
                           || isCampParticipant(get(/databases/$(database)/documents/camps/$(campId)));
    }
    
    match /groupChats/mainRoom/messages/{messageId} {
        allow read, write: if isVle(request.auth.uid) || isAdmin();
    }
  }
}
