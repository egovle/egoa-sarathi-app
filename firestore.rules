
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/vles/$(userId)) &&
             get(/databases/$(database)/documents/vles/$(userId)).data.isAdmin == true;
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId, collectionName) {
      return request.auth.uid == userId;
    }

    // Users can read/update their own profile
    match /users/{userId} {
      allow read, update: if isOwner(userId, 'users') || isAdmin(request.auth.uid);
      allow create: if request.auth.uid != null;
    }

    // VLEs can read/update their own profile
    match /vles/{userId} {
       allow read, update: if isOwner(userId, 'vles') || isAdmin(request.auth.uid);
       allow create: if request.auth.uid != null;
       // Admins can manage all VLEs
       allow list, delete: if isAdmin(request.auth.uid);
    }
    
    // Government users can read/update their own profile
    match /government/{userId} {
       allow read, update: if isOwner(userId, 'government') || isAdmin(request.auth.uid);
       allow create: if request.auth.uid != null;
       allow list, delete: if isAdmin(request.auth.uid);
    }

    // Tasks can be read by the creator, assigned VLE, or an admin
    match /tasks/{taskId} {
      allow read, update: if request.auth.uid == resource.data.creatorId || 
                             request.auth.uid == resource.data.assignedVleId || 
                             isAdmin(request.auth.uid);
      allow create: if request.auth.uid != null;
      allow list, delete: if isAdmin(request.auth.uid);
    }
    
    // Notifications can be read by the recipient
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid != null;
    }

    // Services can be read by any authenticated user, but only managed by admins
    match /services/{serviceId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // Camps can be read by any authenticated user, but only managed by admins
    match /camps/{campId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // Camp Suggestions can be read/written by authenticated VLEs/Govt, managed by Admins
    match /campSuggestions/{suggestionId} {
        allow read, create: if request.auth.uid != null;
        allow delete: if isAdmin(request.auth.uid);
    }
    
    // Payment Requests can be created by users and managed by admins
    match /paymentRequests/{reqId} {
      allow create: if request.auth.uid != null;
      allow read, update: if isAdmin(request.auth.uid);
    }

    // Task and Camp chats
    match /{chatCollection}/{chatId}/messages/{messageId} {
      allow read, create: if request.auth.uid != null; // Simplistic rule, can be refined to check chat membership
    }
  }
}
