
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check for the isAdmin flag on a VLE document.
      // Use exists() to prevent errors if the path doesn't exist.
      return isAuth() && exists(/databases/$(database)/documents/vles/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isVle() {
        return isAuth() && exists(/databases/$(database)/documents/vles/$(request.auth.uid));
    }

    // --- Global Admin Access ---
    // A global rule granting admins full read/write access to the entire database simplifies other rules.
    match /{path=**} {
        allow read, write: if isAdmin();
    }

    // --- User & VLE Profile Rules ---
    match /{collectionName}/{userId} where collectionName == 'users' || collectionName == 'vles' {
        allow read, create: if isOwner(userId);
        
        // Users can update their own profiles, but cannot make themselves an admin or change their role.
        allow update: if isOwner(userId) && 
                       request.resource.data.isAdmin == resource.data.isAdmin &&
                       request.resource.data.role == resource.data.role;
    }
    
    // --- Public & Semi-Public Collections ---
    match /services/{serviceId} {
      allow read: if isAuth();
    }

    match /camps/{campId} {
      allow read: if isAuth();
    }
    
    // --- Task-Specific Rules ---
    match /tasks/{taskId} {
      // Only authenticated users can create tasks. The transaction handles the payment logic.
      allow create: if isAuth();

      // Only the creator or the assigned VLE can read a task. Admins are covered by the global rule.
      allow read: if isOwner(resource.data.creatorId) || isOwner(resource.data.assignedVleId);

      // Specific update permissions for VLEs and Customers.
      allow update: if 
        // The assigned VLE can update the task
        isOwner(resource.data.assignedVleId) || 
        // The creator can only update specific fields (complaint, feedback, documents).
        (isOwner(resource.data.creatorId) && 
          (
            request.resource.data.complaint != resource.data.complaint ||
            request.resource.data.feedback != resource.data.feedback ||
            request.resource.data.documents != resource.data.documents
          )
        );
    }
    
    // --- VLE-Specific Suggestions ---
    match /campSuggestions/{suggestionId} {
      allow create: if isVle();
    }

    // --- Notification Rules ---
    match /notifications/{notificationId} {
       // Admins can create notifications (covered by global rule), and users can create them for themselves.
       allow create: if isAuth();
       // Users can only read or update their own notifications.
       allow read, update: if isOwner(resource.data.userId);
    }
    
    // --- Payment Request Rules ---
    match /paymentRequests/{reqId} {
      // Any authenticated user can create a request to add balance.
      allow create: if isAuth();
    }
  }
}
