
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Admins are defined in the 'vles' collection.
      return exists(/databases/$(database)/documents/vles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // --- Collection Rules ---

    // USERS: Can create their own profile. Can only read/update their own profile. Admins can read/update any.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
    }

    // VLES: Can create their own profile. Can only read/update their own. Admins can do anything.
    match /vles/{vleId} {
      allow read, update: if isOwner(vleId) || isAdmin();
      allow create: if isOwner(vleId);
      // Admins are allowed to list all VLEs for management.
      allow list: if isAdmin();
    }

    // TASKS: The most important collection.
    match /tasks/{taskId} {
      // Anyone authenticated can create a task. App logic handles payment etc.
      allow create: if request.auth != null;
      
      // Reading and writing is allowed only by the creator, assigned VLE, or an admin.
      // This single rule also secures list queries. A query will only succeed if every
      // potential document in the result set satisfies this rule.
      allow read, update, delete: if request.auth != null && (
        isOwner(resource.data.creatorId) ||
        (resource.data.assignedVleId != null && isOwner(resource.data.assignedVleId)) ||
        isAdmin()
      );
    }
    
    // SERVICES: Publicly readable list, but only writable by admins.
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // CAMPS: Authenticated users can read. Admins can write.
    match /camps/{campId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // CAMP SUGGESTIONS: Authenticated users can create. Admins can read/delete.
    match /campSuggestions/{suggestionId} {
      allow create: if request.auth != null;
      allow read, delete, list: if isAdmin();
    }
    
    // NOTIFICATIONS: Users can only manage their own notifications.
    // The query `where("userId", "==", uid)` is secured by this `read` rule.
    match /notifications/{notificationId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // PAYMENT REQUESTS: Users can create their own requests. Only admins can manage them.
    match /paymentRequests/{reqId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update, list: if isAdmin();
    }
  }
}
