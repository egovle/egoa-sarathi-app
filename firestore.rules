
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function getUserData(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function getVleData(userId) {
        return get(/databases/$(database)/documents/vles/$(userId)).data;
    }

    function getGovData(userId) {
        return get(/databases/$(database)/documents/government/$(userId)).data;
    }

    function isCustomer() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    function isVLE() {
      return isSignedIn() && exists(/databases/$(database)/documents/vles/$(request.auth.uid));
    }
    
    function isAdmin() {
        return isVLE() && getVleData(request.auth.uid).isAdmin == true;
    }

    // --- User Profiles (customers, vles, government) ---
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if !isSignedIn(); // Allow creation during registration
    }

    match /vles/{vleId} {
      allow read: if isSignedIn();
      allow create: if !isSignedIn(); // Allow creation during registration
      allow update: if isOwner(vleId) || isAdmin();
    }
    
    match /government/{govId} {
       allow read: if isSignedIn();
       allow create: if !isSignedIn();
       allow update: if isOwner(govId) || isAdmin();
    }

    // --- Core Data ---
    match /tasks/{taskId} {
        allow read: if isAdmin() || isOwner(resource.data.creatorId) || isOwner(resource.data.assignedVleId);
        allow create: if isCustomer() || isVLE();
        allow update: if isAdmin() || isOwner(resource.data.creatorId) || isOwner(resource.data.assignedVleId);
    }
    
    match /services/{serviceId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /camps/{campId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /campSuggestions/{suggestionId} {
        allow read: if isAdmin();
        allow create: if isVLE() || exists(/databases/$(database)/documents/government/$(request.auth.uid));
        allow delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read, delete: if isOwner(resource.data.userId);
      allow create: if isAdmin() || isCustomer() || isVLE(); // System can create notifications
    }
    
    match /paymentRequests/{requestId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isCustomer() || isVLE();
        allow update: if isAdmin();
    }

    // --- Chat ---
    match /taskChats/{taskId}/messages/{messageId} {
       allow read, create: if isAdmin() || isVLE() || isCustomer();
    }
    
    match /groupChats/{roomId}/messages/{messageId} {
        allow read, create: if isAdmin() || isVLE();
    }
    
     match /campChats/{campId}/messages/{messageId} {
        allow read, create: if isAdmin() || isVLE();
     }
     
     match /trainingMaterials/{materialId} {
        allow read: if isVLE() || isAdmin();
        allow create, delete: if isAdmin();
     }
  }
}
