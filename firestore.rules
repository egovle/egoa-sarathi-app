rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuth() && exists(/databases/$(database)/documents/vles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }

    // --- User and VLE Profile Rules ---
    match /{collection}/{userId} where collection in ['users', 'vles'] {
      allow read: if isAuth() && (isOwner(userId) || isAdmin());
      
      // Anyone can create a user/vle profile during registration.
      allow create: if isAuth();

      // Admins can update anything.
      // Owners can update their own profiles, BUT they cannot give themselves money,
      // and they cannot make themselves an admin or change their role.
      allow update: if isAuth() && (
        isAdmin() ||
        (
          isOwner(userId) &&
          (request.resource.data.walletBalance <= resource.data.walletBalance || !('walletBalance' in request.resource.data)) &&
          (request.resource.data.isAdmin == false || !('isAdmin' in request.resource.data)) &&
          (request.resource.data.role == resource.data.role || !('role' in request.resource.data))
        )
      );

      allow delete: if isAdmin();
    }

    // --- Task Rules ---
    match /tasks/{taskId} {
      allow read: if isAuth() && (
        isAdmin() ||
        resource.data.creatorId == request.auth.uid ||
        resource.data.assignedVleId == request.auth.uid
      );
      
      // Allow creation by any authenticated user.
      // The transaction to debit the user's wallet is allowed by the user update rule.
      allow create: if isAuth();

      // Allow updates only by admins, the assigned VLE, or the task creator.
      // Specific field protections are handled in the application logic.
      // A more granular ruleset can be added later if needed.
      allow update: if isAuth() && (
        isAdmin() ||
        request.auth.uid == resource.data.assignedVleId ||
        request.auth.uid == resource.data.creatorId
      );

      allow delete: if isAdmin();
    }
    
    // --- Other Collections ---
    match /services/{docId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    match /notifications/{docId} {
        allow read, write, delete: if isAuth() && (isOwner(request.resource.data.userId) || isAdmin());
    }
    
    match /camps/{docId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    match /campSuggestions/{docId} {
      allow read, write, delete: if isAuth();
    }

    match /paymentRequests/{docId} {
      allow read, write, delete: if isAuth();
    }
  }
}
