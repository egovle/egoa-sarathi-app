
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/vles/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isVle() {
        return isAuth() && exists(/databases/$(database)/documents/vles/$(request.auth.uid));
    }

    // --- Collection Rules ---

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow update: if (isAdmin() || 
                      (isOwner(userId) && request.resource.data.walletBalance == resource.data.walletBalance));
      allow create: if isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // VLEs collection
    match /vles/{vleId} {
      allow read: if isOwner(vleId) || isAdmin();
      allow update: if (isAdmin() || 
                      (isOwner(vleId) && 
                       request.resource.data.walletBalance == resource.data.walletBalance &&
                       request.resource.data.status == resource.data.status));
      allow create: if isOwner(vleId);
      allow delete: if isAdmin();
    }
    
    // Services collection
    match /services/{serviceId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
       allow create: if isAuth();
       allow read, update: if isOwner(resource.data.userId);
       allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Tasks collection
    match /tasks/{taskId} {
      allow create: if isAuth();
      allow read: if isOwner(resource.data.creatorId) || isOwner(resource.data.assignedVleId) || isAdmin();
      allow update: if (isOwner(resource.data.assignedVleId) || isAdmin()) ||
                       (isOwner(resource.data.creatorId) && 
                         (request.resource.data.complaint != resource.data.complaint || 
                          request.resource.data.feedback != resource.data.feedback ||
                          request.resource.data.documents != resource.data.documents ||
                          request.resource.data.status == 'Awaiting Payment')
                       );
      allow delete: if isAdmin();
    }

    // Camps collection
    match /camps/{campId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    // Camp Suggestions collection
    match /campSuggestions/{suggestionId} {
      allow create: if isVle();
      allow read, delete: if isAdmin();
    }

    // Payment Requests collection
    match /paymentRequests/{reqId} {
      allow create: if isAuth();
      allow read, update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}
