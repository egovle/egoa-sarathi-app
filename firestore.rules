
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      let uid = request.auth.uid;
      return uid != null && exists(/databases/$(database)/documents/vles/$(uid)) &&
             get(/databases/$(database)/documents/vles/$(uid)).data.isAdmin == true;
    }

    function isVle() {
        let uid = request.auth.uid;
        return uid != null && exists(/databases/$(database)/documents/vles/$(uid));
    }
    
    function isTaskCreator(taskId) {
        return request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.creatorId;
    }
    
    function isAssignedVle(taskId) {
        let taskData = get(/databases/$(database)/documents/tasks/$(taskId)).data;
        return taskData.assignedVleId != null && request.auth.uid == taskData.assignedVleId;
    }


    // --- Path Rules ---

    // User (Customer) Profiles
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // VLE Profiles
    match /vles/{vleId} {
      allow read, update: if isOwner(vleId) || isAdmin();
      allow create: if request.auth != null && request.auth.uid == vleId;
    }

    // Tasks
    match /tasks/{taskId} {
      // Any authenticated user can create a task.
      allow create: if request.auth != null;

      // Allow read/update by the task creator, assigned VLE, or an admin.
      allow read, update: if request.auth != null && (
        isTaskCreator(taskId) ||
        isAssignedVle(taskId) ||
        isAdmin()
      );
    }
    
    // Services
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Camps
    match /camps/{campId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Camp Suggestions
    match /campSuggestions/{suggestionId} {
      allow create: if request.auth != null;
      allow read, delete: if isAdmin();
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if request.auth != null;
    }
    
    // Payment Requests
    match /paymentRequests/{reqId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isAdmin();
    }
  }
}
